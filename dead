 <h3 class="question">
        恋人にされたいのは？
    </h3>
    <div>
        <button class="answer" onclick="anserSelected(0)">手紙を書いてくれる</button>
        <button class="answer">ハグしてくれる</button>
    </div>
    <h3 class="question">
        恋人にされたいのは？
    </h3>
    <div>
        <button class="answer">話し合いの時間を設けてくれる</button>
        <button class="answer">自分の仕事を手伝ってくれる</button>
    </div>
    <h3 class="question">
        恋人にされたいのは？
    </h3>
    <div>
        <button class="answer">プレゼントをくれる</button>
        <button class="answer">一緒に旅行に行く</button>
    </div>
    <h3 class="question">
        恋人にされたいのは？
    </h3>
    <div>
        <button class="answer">手をつなぐ</button>
        <button class="answer">ご飯おごってくれる</button>
    </div>
    <h3 class="question">
        恋人にされたいのは？
    </h3>
    <div>
        <button class="answer">自分の趣味に付き合ってくれる</button>
        <button class="answer">ホテルでイチャイチャ</button>
    </div>
    <h3 class="question">
        恋人にされたいのは？
    </h3>
    <div>
        <button class="answer">サプライズをしてくれる</button>
        <button class="answer">「大好き」と言ってくれる</button>
    </div>
    <h3 class="question">
        恋人にされたいのは？
    </h3>
    <div>
        <button class="answer">「かわいい」と言ってくれる</button>
        <button class="answer">代わりに家事をしてくれる</button>
    </div>
    <h3 class="question">
        恋人にされたいのは？
    </h3>
    <div>
        <button class="answer">料理をしてくれる</button>
        <button class="answer">好きなお菓子を買ってきてくれる</button>
    </div>
    <h3 class="question">
        恋人にされたいのは？
    </h3>
    <div>
        <button class="answer">友達にあなたの自慢をしてくれる</button>
        <button class="answer">自分の話を親身に聞いてくれる</button>
    </div>
    <h3 class="question">
        恋人にされたいのは？
    </h3>
    <div>
        <button class="answer">会社まで迎えに来てくれる</button>
        <button class="answer">スキンシップを求めてくる</button>
    </div>
    <div>
        <button class="submit">診断する</button>
    </div>

    <!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="index.css">
    <script src="binary_test.js"></script>
    <title>Document</title>
</head>
<body>
    <main>
        <h1>簡単な診断テスト</h1>
        <div id="questions"></div>
        <button onclick="displayResult()" id="showResult">診断結果を表示</button>
        <div id="result"></div>
   
</main>

</body>
</html>




var questions = [
{
 question: "恋人にされたいのは？", choices:  [{name:"手紙を書いてくれる",classification:"A"},
 {name:"ハグしてくれる",classification:"B"}], 
},
{
    question: "恋人にされたいのは？", choices:  [{name:"手紙を書いてくれる",classification:"A"},
    {name:"ハグしてくれる",classification:"B"}], 
   },
   {
    question: "恋人にされたいのは？", choices:  [{name:"手紙を書いてくれる",classification:"A"},
    {name:"ハグしてくれる",classification:"B"}], 
   },
// { text: "恋人にされたいのは？", choices:["話し合いの時間を設けてくれる", "自分の仕事を手伝ってくれる"], },
// { text: "恋人にされたいのは？", choices: ["プレゼントをくれる", "一緒に旅行に行く"], },
// { text: "恋人にされたいのは？", choices: ["手をつなぐ", "ご飯おごってくれる"], },
// { text: "恋人にされたいのは？", choices:  ["自分の趣味に付き合ってくれる", "ホテルでイチャイチャ"], },
// { text: "恋人にされたいのは？", choices: ["サプライズをしてくれる", "「大好き」と言ってくれる"], },
// { text: "恋人にされたいのは？", choices: ["「かわいい」と言ってくれる", "代わりに家事をしてくれる"], },
// { text: "恋人にされたいのは？", choices: ["料理をしてくれる", "好きなお菓子を買ってきてくれる"], },
// { text: "恋人にされたいのは？", choices: ["友達にあなたの自慢をしてくれる", "自分の話を親身に聞いてくれる"], },
// { text: "恋人にされたいのは？", choices: ["会社まで迎えに来てくれる", "スキンシップを求めてくる"], },
// { text: "恋人にされたいのは？", choices: ["プレゼントをくれる", "一緒に旅行に行く"], },

];

var points = {
"A": 0,
"B": 0,
"C": 0
};

var answers = [];

window.addEventListener("DOMContentLoaded", function() {
var questionsElement = document.getElementById("questions");

for (var i = 0; i < questions.length; i++) {
  var questionElement = document.createElement("div");
  questionElement.classList.add("question");
  questionElement.textContent = questions[i].question;
  
  var choicesElement = document.createElement("div");
  choicesElement.classList.add("choices");
  
  for (var j = 0; j < questions[i].choices.length; j++) {
    var button = document.createElement("button");
    button.textContent = questions[i].choices[j].name;
    button.classList.add("choice");
    button.addEventListener("click", function() {
      answerSelected(this,questions[i].choice[j].classification);
    });
    
    choicesElement.appendChild(button);
  }
  
  questionsElement.appendChild(questionElement);
  questionsElement.appendChild(choicesElement);
}
});

function answerSelected(button,classification) {
var choice = button.classification;
var questionIndex = Array.from(button.parentNode.parentNode.children).indexOf(button.parentNode);
var choiceIndex = Array.from(button.parentNode.children).indexOf(button);
var rightQuestionIndex = (questionIndex-1)/2;
answers[rightQuestionIndex] = choice;

// 選択されたボタンの色を変更
button.classList.add("selected");

// クリックされた選択肢に対応する分類に1ポイント追加
if (choice.classification("A")) {
  points["A"]++;
} else if (choice.startsWith("b")) {
  points["B"]++;
} else if (choice.startsWith("c")) {
  points["C"]++;
}

// ボタンのクリックを無効化
var buttons = button.parentNode.querySelectorAll("button");
buttons.forEach(function(btn) {
  btn.removeEventListener("click", function() {
    answerSelected(this);
  });
  btn.disabled = true;
});
}

function displayResult() {
var resultElement = document.getElementById("result");
var result;

if (answers.length !== questions.length || answers.includes(undefined)) {
  result = answers;
} else {
  var maxPoints = Math.max(points["A"], points["B"], points["C"]);
  
  if (maxPoints === points["A"]) {
    result
= "診断結果: A";
} else if (maxPoints === points["B"]) {
result = "診断結果: B";
} else if (maxPoints === points["C"]) {
result = "診断結果: C";
}
}

resultElement.textContent = result;
}